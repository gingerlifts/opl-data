#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Conversion script from the openpowerlifting.csv to openpowerlifting.js.
#
# Does some data transformations along the way to reduce filesize and make
# the JS logic easier:
#
# 1) Columns not used by the Rankings view are hidden.
#
# 2) Instead of having separate "BestSquatKg" and "Squat4Kg" columns, for example,
#    those fields are combined into a single column named "SquatKg".
#
# 3) Sex: "M" => 0, "F" => 1.
#
# 4) Equipment: "Raw" => 0, "Wraps" => 1, "Single-ply" => 2,
#               "Multi-ply" => 3, "Straps" => 4.
#

import os
import sys

try:
    import oplcsv
    import csvtojs
except ModuleNotFoundError:
    sys.path.append(os.path.abspath(os.path.join(
        os.path.dirname(__file__), '..', 'scripts')))
    import oplcsv
    import csvtojs


ENTRIESCSV = 'build/static/data/openpowerlifting.csv'


# Returns the greater of two strings, as interpreted as floats.
def strmax(a, b):
    if a == '':
        return b
    if b == '':
        return a

    if float(a) >= float(b):
        return a
    return b


def main():
    # The Makefile has already removed many of the columns.
    csv = oplcsv.Csv(ENTRIESCSV)

    csv.insert_column(csv.index('BestSquatKg'), 'SquatKg')
    csv.insert_column(csv.index('BestBenchKg'), 'BenchKg')
    csv.insert_column(csv.index('BestDeadliftKg'), 'DeadliftKg')

    for row in csv.rows:
        # Populate the "Squat", "Bench", and "Deadlift" columns.
        row[csv.index('SquatKg')] = \
            strmax(row[csv.index('BestSquatKg')], row[csv.index('Squat4Kg')])
        row[csv.index('BenchKg')] = \
            strmax(row[csv.index('BestBenchKg')], row[csv.index('Bench4Kg')])
        row[csv.index('DeadliftKg')] = \
            strmax(row[csv.index('BestDeadliftKg')],
                   row[csv.index('Deadlift4Kg')])

        # Represent Equipment as an integer.
        eqp = row[csv.index('Equipment')]
        if eqp == 'Raw':
            row[csv.index('Equipment')] = "0"
        elif eqp == 'Wraps':
            row[csv.index('Equipment')] = "1"
        elif eqp == 'Single-ply':
            row[csv.index('Equipment')] = "2"
        elif eqp == 'Multi-ply':
            row[csv.index('Equipment')] = "3"
        elif eqp == 'Straps':
            row[csv.index('Equipment')] = "4"

        # Represent Sex as an integer.
        sex = row[csv.index('Sex')]
        if sex == 'M':
            row[csv.index('Sex')] = "0"
        elif sex == 'F':
            row[csv.index('Sex')] = "1"

    csv.remove_column_by_name('BestSquatKg')
    csv.remove_column_by_name('Squat4Kg')
    csv.remove_column_by_name('BestBenchKg')
    csv.remove_column_by_name('Bench4Kg')
    csv.remove_column_by_name('BestDeadliftKg')
    csv.remove_column_by_name('Deadlift4Kg')

    # Convert to a big JS array.
    csvtojs.convert(csv, "opldb", sys.stdout)


if __name__ == '__main__':
    main()
