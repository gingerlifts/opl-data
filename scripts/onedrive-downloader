#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# For downloading meets on MS Onedrive
# Note that to use this script you will need Selenium installed
# and geckodriver on your path.

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import os
import sys
import time
import shutil


def download_file(url, resultsname):
    profile = webdriver.FirefoxProfile()

    profile.set_preference("browser.helperApps.neverAsk.saveToDisk",
                           "application/"
                           "vnd.openxmlformats-officedocument.spreadsheetml.sheet")

    profile.set_preference("browser.download.folderList", 2)
    profile.set_preference("browser.download.dir", os.getcwd())

    foptions = Options()
    foptions.add_argument("--headless")
    driver = webdriver.Firefox(profile, options=foptions)
    driver.get(url)
    time.sleep(5)
    iframe = driver.find_element(by=By.ID, value='sdx_ow_iframe')
    driver.switch_to.frame(iframe)
    # Wait until we can click the download button
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located(
            (By.XPATH, "//button[@data-unique-id='FileMenu']"))
    )

    file_button = driver.find_element(
        by=By.XPATH, value="//button[@data-unique-id='FileMenu']")
    time.sleep(5)
    file_button.click()

    time.sleep(5)

    saveas_button = driver.find_element(by=By.ID, value="FileSaveAsPage")
    saveas_button.click()

    download_button = driver.find_element(
        by=By.XPATH, value="//button[@data-unique-id='DownloadACopy']")
    download_button.click()

    alertbox = driver.find_elements(by=By.ID, value="errorbuttonarea")
    if len(alertbox) != 0:
        yes_button = alertbox[0].find_element_by_class_name("ewa-dlg-button")
        yes_button.click()

    driver.quit()

    if os.path.exists("geckodriver.log"):
        os.remove("geckodriver.log")

    # Rename the file
    filename = sorted([os.path.join(os.getcwd(), basename)
                       for basename in os.listdir(os.getcwd())], key=os.path.getctime)[0]
    shutil.move(filename, os.path.join(os.getcwd(), resultsname))


if __name__ == '__main__':
    if len(sys.argv) != 3:
        print("Usage: %s url results-name" % sys.argv[1])
    download_file(sys.argv[1], sys.argv[2])
