#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Converts every column with "LBS" in the header to kilograms,
# replacing "LBS" with "Kg".
# The first row must contain column names.
#
# Overwrites the input file if all columns can be converted.
#

import sys
from oplcsv import Csv


# Round to two decimal places.
def internal_to_kg_string(s):
    try:
        # NOTE: SPF uses "2.2046". Greater accuracy actually makes it worse.
        r = "{:.2f}".format(float(s) / 2.20462262)
        r = r.replace('.00', '')
        if '.' in r and r[-1] == '0':
            r = r[:-1]
        return r
    except ValueError:
        print("Field not a float: \"%s\"" % s, file=sys.stderr)
        sys.exit(1)


def to_kg(s):
    if s[-1] is '+':
        amount = internal_to_kg_string(s[:-1])
        # Handle an error where the importer thought the weightclass was KG
        # and converted 'SHW' to a number in Kg.
        if amount == '40.82':  # for women
            return '90+'
        if amount == '63.50':  # for men
            return '140+'

        # Old USAPL classes.
        if amount == '275+':
            return '125+'
        if amount == '198+':
            return '90+'
        return amount + '+'

    return internal_to_kg_string(s)


def main(filename):
    csv = Csv(filename)
    changed = False

    for i, field in enumerate(csv.fieldnames):
        if 'LBS' not in field:
            continue

        print(' Converting column "%s"' % field)
        changed = True

        csv.fieldnames[i] = field.replace('LBS', 'Kg')

        for row in csv.rows:
            if row[i]:
                if row[i] == 'SHW':
                    sex = row[csv.index('Sex')]
                    assert sex in 'MF'

                    # Hardcode the traditional classes.
                    if sex == 'M':
                        row[i] = '140+'
                    else:
                        row[i] = '90+'
                else:
                    row[i] = to_kg(row[i])

    if changed:
        with open(filename, 'w') as fd:
            csv.write(fd)


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print(' Usage: %s csvfile' % sys.argv[0], file=sys.stderr)
        sys.exit(1)
    main(sys.argv[1])
