#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Sometimes divisions look like '198 Open Men RAW'
# This changes that to 'Open Men'.
#
# Overwrites the file in-place if it looks like no information is lost.

import sys

with open(sys.argv[1], 'r') as fd:
    csv = [x.strip().split(',') for x in fd.readlines()]

divindex = -1
equipindex = -1

for i in range(0, len(csv[0])):
    if csv[0][i] == 'Division':
        divindex = i
    if csv[0][i] == 'Equipment':
        equipindex = i

if divindex == -1:
    print("Missing division")
    sys.exit(1)


def is_int(x):
    try:
        int(x)
        return True
    except ValueError:
        return False


for row in csv[1:]:
    div = row[divindex]

    if "open men" in div.lower():
        div = "Open Men"
    elif "open women" in div.lower():
        div = "Open Women"

    # Uh, yeah. USPA sure is standardized.
    div = div.replace("Classic", '')
    div = div.replace("Single-ply", '')
    div = div.replace("Single-Ply", '')
    div = div.replace("Single Ply", '')
    div = div.replace("Singleply", '')
    div = div.replace("SinglePly", '')
    div = div.replace("single Ply", '')
    div = div.replace("Single ply", '')
    div = div.replace("Multi-ply", '')
    div = div.replace("Multi-Ply", '')
    div = div.replace("Multi Ply", '')
    div = div.replace("Multiply", '')
    div = div.replace("MultiPly", '')
    div = div.replace("Multi", '')
    div = div.replace("MULTI Ply", '')
    div = div.replace("Raw", '')
    div = div.replace("RAW", '')
    div = div.replace("raw", '')

    if row[divindex] != div and equipindex == -1:
        if row[equipindex] == '':
            print("Need equipment information")
            sys.exit(1)

    div = div.replace('SHW', '')
    div = div.replace('308+', '')
    div = div.replace('198+', '')

    if is_int(div.split()[0]) or 'kg' in div.split()[0]:
        div = ' '.join(div.split()[1:])

    if div[-1] == '-':
        div = div[:-1]

    row[divindex] = div.strip()


lines = [','.join(row) + "\n" for row in csv]

with open(sys.argv[1], 'w') as fd:
    fd.writelines(lines)
