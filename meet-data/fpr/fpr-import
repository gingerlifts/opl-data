#!/bin/bash

set -e

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
REPOSCRIPTDIR="${SCRIPTDIR}/../../scripts"


if [ $# -lt 2 ]; then
	echo " Usage: $0 dirname url"
	exit 1
fi

mkdir "$1"
cd "$1"

r_nums=($(seq 1 1 $(($# -1)))) 
if [ $# == 2 ];then #Only number the result files if there is more than one
	r_nums[0]=''
fi



#Process $#-1 meet files
for (( ii=2; ii<=$# ; ii++))
do

	# Remember whether it's XLS or XLSX.
	EXTENSION="${!ii##*.}"

	# Download the results page.
	wget --output-document="original${r_nums[$((ii-2))]}.${EXTENSION}"  ${!ii}

	# Save the website URL for future use, since it's pretty hard to tell
	# what meets on the site are tracked and which aren't.
	echo ${!ii}  >> URL

	mapfile -t sheet_names < <( ${SCRIPTDIR}/get-sheet-names "original${r_nums[$((ii-2))]}.${EXTENSION}" )

	# Convert the spreadsheet to HTML.
	# The spreadsheet will have multiple pages -- these will all be added to one document.
	libreoffice --headless --convert-to html "original${r_nums[$((ii-2))]}.${EXTENSION}"

	# Move the original.html to tmp.xls -- newer versions of LibreOffice don't
	# understand how to convert HTML -> CSV, but do understand XLS -> CSV.
	mv "original${r_nums[$((ii-2))]}.html" tmp.xls


	#Remove red font colour in front of <s> tags
	sed -i -e 's/<s><font.*color="#FF0000">/-/g' tmp.xls
	sed -i -e 's/<font face=.*color="#FF0000">/-/g' tmp.xls
	sed -i -e 's/<\/font>//g' tmp.xls


	# Convert <s> to "-".
	sed -i -e 's/<s>/-/g' tmp.xls
	sed -i -e 's/<\/s>//g' tmp.xls


	#Remove sdvals from html, otherwise LibreOffice ignores negatives when converting to csv
	sed -i -e 's/sdval="[^\"]*"//g' tmp.xls

	# Convert commas in numbers to periods
	sed -i -e 's/,/\./g' tmp.xls

	# Convert the HTML back to CSV.
	# The --infilter argument is necessary to get LibreOffice to stop parsing
	# the encoding as ISO-8859-1, and preserve the UTF8 encoding.
	# See https://bugs.documentfoundation.org/show_bug.cgi?id=36313#c17.
	libreoffice --headless --convert-to csv --infilter=CSV:44,34,UTF8 tmp.xls
	mv tmp.csv "original${r_nums[$((ii-2))]}.csv"


	#If there was only one sheet we will have lost the sheet name, so add it back
	if [ ${#sheet_names[*]} == 1 ]; then
		echo -e 'Sheet 1: '$sheet_names'\n' | cat - "original${r_nums[$((ii-2))]}.csv" > temp && mv temp "original${r_nums[$((ii-2))]}.csv"
	fi


	# Remove some dash-only columns from the CSV.
	sed -i -e 's/,-,/,,/g' "original${r_nums[$((ii-2))]}.csv"
	sed -i -e 's/,-,/,,/g' "original${r_nums[$((ii-2))]}.csv"


	# Clean up.
	if [ -f "original${r_nums[$((ii-2))]}.csv" ]; then
		rm tmp.xls "original${r_nums[$((ii-2))]}.${EXTENSION}"
		rm -f *.png #FPR results have embedded images which we don't want
	fi
done

${SCRIPTDIR}/fpr-parse-post
