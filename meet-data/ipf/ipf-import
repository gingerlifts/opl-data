#!/bin/bash
# Given a dirname and URL as arguments,
# downloads the meet data and attempts to convert it to the internal format.
#

set -e

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
REPOSCRIPTDIR="${SCRIPTDIR}/../../scripts"

if [ $# -lt 2 ]; then
	echo "Usage: $0 dirname URL"
	exit 1
fi

mkdir "$1"
cd "$1"


#One file
if [ $# -eq 2 ];then
	# Download the results page.
	wget --output-document=results.html "$2"
	cp results.html results.xls

	# Save the website URL for future use, since it's pretty hard to tell
	# what meets on the site are tracked and which aren't.
	echo "$2" > URL


	# Replace any commas in the xls file with periods.
	# Commas are used as decimal points in the European style.
	sed -i -e 's/,/\./g' results.xls

	# Strikethrough HTML is used to denote failures.
	# Replace <s> with '-' and remove </s>.
	sed -i -e 's/<s>/-/g' results.xls
	sed -i -e 's/<\/s>//g' results.xls

	# Use LibreOffice to automatically convert the <table> to a csv file.
	# This creates results.csv.
	libreoffice --headless --convert-to csv results.xls
	rm results.html results.xls

	# ASCII 0xa0 (a space) creeps in everywhere for no good reason.
	sed -i -e 's/\xa0//g' results.csv

	# Remove redundant spacing.
	sed -i -e 's/  / /g' results.csv
	sed -i -e 's/, /,/g' results.csv
	sed -i -e 's/ ,/,/g' results.csv

	# Failures are denoted as "X", when we just want a blank space.
	sed -i -e 's/,X,/,,/g' results.csv

	# Disqualifications use ascii 0x97, a long dash.
	sed -i -e 's/\x97/DQ/g' results.csv



else #two or more files

	for (( ii=2; ii<=$# ; ii++))
	do
		# Download the results page.
		wget --output-document="results"$((ii-1))".html"  ${!ii}
		cp "results"$((ii-1))".html" "results"$((ii-1))".xls"

		# Save the website URL for future use, since it's pretty hard to tell
		# what meets on the site are tracked and which aren't.
		echo ${!ii}  > URL


		# Replace any commas in the xls file with periods.
		# Commas are used as decimal points in the European style.
		sed -i -e 's/,/\./g' "results"$((ii-1))".xls"

		# Strikethrough HTML is used to denote failures.
		# Replace <s> with '-' and remove </s>.
		sed -i -e 's/<s>/-/g' "results"$((ii-1))".xls" 
		sed -i -e 's/<\/s>//g' "results"$((ii-1))".xls"

		# Use LibreOffice to automatically convert the <table> to a csv file.
		# This creates results.csv.
		libreoffice --headless --convert-to csv "results"$((ii-1))".xls"

		rm "results"$((ii-1))".html" "results"$((ii-1))".xls"

		# ASCII 0xa0 (a space) creeps in everywhere for no good reason.
		sed -i -e 's/\xa0//g' "results"$((ii-1))".csv"

		# Remove redundant spacing.
		sed -i -e 's/  / /g' "results"$((ii-1))".csv"
		sed -i -e 's/, /,/g' "results"$((ii-1))".csv"
		sed -i -e 's/ ,/,/g' "results"$((ii-1))".csv"

	# Failures are denoted as "X", when we just want a blank space.
	sed -i -e 's/,X,/,,/g' "results"$((ii-1))".csv"

	# Disqualifications use ascii 0x97, a long dash.
	sed -i -e 's/\x97/DQ/g' "results"$((ii-1))".csv"
	done

fi


# Commands after this point were extracted into a separate file
# since they had to be re-run in case of error.
${SCRIPTDIR}/ipf-parse-post
