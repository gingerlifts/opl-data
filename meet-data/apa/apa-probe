#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Probes for meet results from the APA.
# APA posts meets to a page separated by year.


from bs4 import BeautifulSoup
import datetime
import os
import sys

try:
    import oplprobe
except ImportError:
    sys.path.append(os.path.join(os.path.dirname(os.path.dirname(
        os.path.dirname(os.path.realpath(__file__)))), "scripts"))
    import oplprobe


# URL needs updating every year.
# Also be careful to check if there are any result links that don't contain
# the string "results", since they won't get picked up by the script below.
if datetime.datetime.now().strftime("%Y") != "2018":
    print("Warning: APA fetch URL needs updating for new year.", file=sys.stderr)

FEDDIR = os.path.dirname(os.path.realpath(__file__))
URLS = [
    "http://www.apa-wpa.com/APA/us-meet-results/2018-2/",
    "http://www.apa-wpa.com/APA/us-meet-results/2017-2/"
]
BASEURL = "http://www.apa-wpa.com/"


def error(msg):
    print(msg, file=sys.stderr)
    sys.exit(1)


def color(s):
    return "\033[1;32m" + s + "\033[0;m"


def getmeetlist(html):
    soup = BeautifulSoup(html, 'html.parser')
    entry_content = soup.find("div", {"class": "entry-content"})

    urls = []
    for a in entry_content.find_all('a'):
        url = a['href']
        if 'http://' not in url:
            if url.startswith('/'):
                url = BASEURL + url[1:]
            else:
                url = BASEURL + url

        if url not in urls:
            urls.append(url)

    return urls


def main():
    meetlist = []
    for url in URLS:
        html = oplprobe.gethtml(url)
        meetlist = meetlist + getmeetlist(html)

    entered = oplprobe.getenteredurls(FEDDIR)
    unentered = oplprobe.getunenteredurls(meetlist, entered)

    oplprobe.print_meets(color('[APA]'), unentered)
    print(color('[APA] ') + "Continue working through archive.")


if __name__ == '__main__':
    main()
