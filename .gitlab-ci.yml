# Skip CI if the commit message contains "WIP:", "[nobuild]", or "[noci]".
workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /(WIP:|\[nobuild\]|\[noci\])/
      when: never
    - if: $CI_MERGE_REQUEST_TITLE =~ /(WIP:|\[nobuild\]|\[noci\])/
      when: never
    - when: always

# The Nightly version of Rust is required, for the moment, due to server dependencies.
# The Rocket framework we use requires Nightly features.
image: rustlang/rust:nightly

# Test the integrity of the data.
meet-data:
  before_script:
    - apt-get update -qq && apt-get install -y python3-pip cmake
    - pip3 install flake8
  script:
    - make check

# Build the data file and run server tests with the current data.
server:
  cache:
    paths:
      - target
      - server/client/node_modules
  before_script:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    - apt-get update -qq && apt-get install -y nodejs python3-pip cmake
    - pip3 install toml
  script:
    - make csv
    - make -C server checkprerequisites
    - cargo test --workspace --locked

# On success, publish the latest version of the Book to GitLab Pages.
pages:
  stage: deploy
  image: rust:alpine
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
  cache:
    paths:
      - $CARGO_HOME/bin
  before_script:
    - export PATH="$PATH:$CARGO_HOME/bin"
    - mdbook --version || cargo install mdbook
  script:
    - mdbook build --dest-dir ../public book  # Build book/ into public/.
  artifacts:
    paths:
      - public
  only:
    - main
