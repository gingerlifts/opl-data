#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Simple script to run over a list of names and output any
# that are listed as being both M and F.
#
import sys,os
sys.path.append(os.path.join(os.path.dirname(os.path.dirname(os.path.realpath(__file__))) ,"scripts"))

import oplcsv


# Hashtable for sex lookup.
# str -> [int, int] (left for male, right for female).
NameToSexHash = {}

###############################################

errorCount = 0
warningCount = 0

def redden(s):
    if os.name != 'nt':
        return "\033[1;31m" + s + "\033[0;m"
    else: 
        return s

def enyellow(s):
    if os.name != 'nt':
        return "\033[1;33m" + s + "\033[0;m"
    else: 
        return s

def perror(s):
    global errorCount
    errorCount += 1
    print(' ' + redden(s), file=sys.stderr)

def pwarning(s):
    global warningCount
    warningCount += 1
    print(' ' + enyellow(s), file=sys.stderr)

###############################################

def process_file(path):
    global NameToSexHash
    global AlreadyPrintedList

    csv = oplcsv.Csv(path)

    if not 'Name' in csv.fieldnames:
        perror("Missing Name column in %s" % path)
        return

    if not 'Sex' in csv.fieldnames:
        perror("Missing Sex column in %s" % path)
        return

    nameidx = csv.index('Name')
    sexidx = csv.index('Sex')

    for row in csv.rows:
        name = row[nameidx]
        sex = row[sexidx]

        if name == '':
            pwarning("Missing name information in %s." % path)
            continue

        if sex == '':
            pwarning("Missing sex information for \"%s\" in %s." % (name,path))
            continue

        # If only the first initial is given, then it could be a false positive.
        first = name.split()[0]
        if len(first) == 1 or (len(first) == 2 and first[-1] == '.'):
            continue

        if not name in NameToSexHash:
            NameToSexHash[name] = [0,0]

        if sex == 'M':
            NameToSexHash[name][0] = NameToSexHash[name][0] + 1
        else:
            NameToSexHash[name][1] = NameToSexHash[name][1] + 1


def main():
    for dirname, subdirs, files in os.walk(os.getcwd()):
        if 'entries.csv' in files:
            entriespath = dirname + os.sep + 'entries.csv'
            process_file(entriespath)

    for name,counts in NameToSexHash.items():
        if counts[0] and counts[1]:
            pwarning("Sex conflict for %s: %uM, %uF." % (name, counts[0], counts[1]))

    if errorCount > 0 or warningCount > 0:
        print("Summary: %u errors, %u warnings." % (errorCount, warningCount))

    if errorCount > 0:
        return 1
    return 0


if __name__ == '__main__':
    sys.exit(main())

