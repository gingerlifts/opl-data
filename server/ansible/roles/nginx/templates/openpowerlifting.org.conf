# Force-upgrade HTTP to HTTPS.
server {
    listen       80;
    listen       [::]:80;
    server_name openpowerlifting.org www.openpowerlifting.org;

    if ($host = openpowerlifting.org) {
        return 301 https://www.openpowerlifting.org$request_uri;
    } # managed by Certbot

    if ($host = www.openpowerlifting.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    return 404; # managed by Certbot
}

# Serve over HTTPS.
server {
    listen [::]:443 ssl http2 ipv6only=on;
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/www.openpowerlifting.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.openpowerlifting.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    server_name openpowerlifting.org www.openpowerlifting.org;
    root         {{ openpl_app_data_path }};

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    # Serve statics assets directly without proxy-passing them.
    location /static {
        root {{ openpl_app_data_path }};
        gzip_static on;
        expires max;
    }

    # Serve files that aren't really in the root directory
    # from static/ without proxy-passing them.
    location = /favicon.ico {
        root {{ openpl_app_data_path }}/static/images;
        gzip_static on;
    }
    location = /apple-touch-icon.png {
        root {{ openpl_app_data_path }}/static/images;
        gzip_static on;
    }

    # Internally redirect 502 messages as if they were to /502.html.
    error_page 502 /502.html;
    # Serve the 502.html out of /static.
    location = /502.html {
        root {{ openpl_app_data_path }}/static;
        gzip_static on;
    }

    # Proxy requests to the openpl-app server.
    location / {
        proxy_pass http://127.0.0.1:{{ openpl_app_port }};
    }
}
